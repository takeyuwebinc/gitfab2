#tabs
  = link_to project_path(@owner, @project) do
    .tab.active
      'Recipe
      = "(#{@project.states_count})"
  = link_to project_note_cards_path(@owner, @project) do
    .tab
      'Memos
      = "(#{@project.note_cards_count})"

section#recipe-cards
  .top
    .inner
      section#material-list
        h2 Materials
        ul

      section#tool-list
        h2 Tools
        ul

      section#blueprint-list
        h2 Blueprints
        ul

  section#making-list
    .top
      .inner
        h2 Making
    ul#recipe-card-list.card-list
      - @states.each do |state|
        li class="card-wrapper #{state.htmlclass}-wrapper"
          - cache [state, state.annotations, state.visible_comments, current_user] do
            = render "states/state", state: state, owner: @owner, project: @project

    .article-column.sp
      - if can? :edit, @project
        - new_url = new_project_state_path(@owner, @project, "state[_type]" => Card::State.name)
        = link_to "Add State", new_url, remote: true, class: "btn new-card", "data-list" => "#recipe-card-list", "data-classname" => "state-wrapper", "data-template" => "#state-template"

    = nested_form_for @project, url: project_change_order_path(@owner, @project), html: { class: "order-change-form" }, remote: true do |f|
      = f.fields_for :states do |ff|
        = ff.text_field :position, class: "position", "data-id" => ff.object.id
        = ff.hidden_field :id, class: "id"
      = f.link_to_add "Add Card Order", :states, id: "add-card-order"
      = f.submit "submit", id: "submit-card-order"

  .bottom
    .inner
      #references
        h2 References
        ul
